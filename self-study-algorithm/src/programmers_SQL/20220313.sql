-- 프로그래머스 코딩테스트 SQL 연습 

-- 없어진 기록 찾기

SELECT AO.ANIMAL_ID, AO.NAME
FROM ANIMAL_OUTS AO
WHERE NOT EXISTS (SELECT *
                  FROM   ANIMAL_INS AI
                  WHERE  AO.ANIMAL_ID = AI.ANIMAL_ID)
ORDER BY AO.ANIMAL_ID, AO.NAME


-- 있었는데요 없었습니다
SELECT  AI.ANIMAL_ID, AI.NAME
FROM    ANIMAL_INS AI, ANIMAL_OUTS AO
WHERE   AI.ANIMAL_ID = AO.ANIMAL_ID
        AND AI.DATETIME > AO.DATETIME 
ORDER BY AI.DATETIME


-- 보호소에서 중성화한 동물
SELECT  AI.ANIMAL_ID, AI.ANIMAL_TYPE, AI.NAME
FROM    ANIMAL_INS AI, ANIMAL_OUTS AO
WHERE   AI.ANIMAL_ID = AO.ANIMAL_ID
        AND AI.SEX_UPON_INTAKE != AO.SEX_UPON_OUTCOME
ORDER BY AI.ANIMAL_ID, AI.ANIMAL_TYPE, AI.NAME


-- NULL 처리하기
SELECT ANIMAL_TYPE, NVL(NAME, 'No name') AS NAME, SEX_UPON_INTAKE
FROM ANIMAL_INS
ORDER BY ANIMAL_ID


-- 중성화 여부 파악하기
SELECT ANIMAL_ID, NAME, 
       CASE WHEN (SEX_UPON_INTAKE LIKE '%Neutered%') OR (SEX_UPON_INTAKE LIKE '%Spayed%') THEN 'O'
            ELSE 'X'
        END AS 중성화
FROM ANIMAL_INS
ORDER BY ANIMAL_ID


-- 오랜 기간 보호한 동물
SELECT *
FROM (SELECT   AI.ANIMAL_ID, AI.NAME
      FROM     ANIMAL_INS AI, ANIMAL_OUTS AO
      WHERE    AI.ANIMAL_ID = AO.ANIMAL_ID
      ORDER BY TO_CHAR(AO.DATETIME, 'YYYYMMDDHHMISS') - TO_CHAR(AI.DATETIME, 'YYYYMMDDHHMISS') DESC
     )
WHERE ROWNUM < 3


-- 고양이와 개는 몇 마리 있을까
SELECT ANIMAL_TYPE, COUNT(*)
FROM ANIMAL_INS
GROUP BY ANIMAL_TYPE
ORDER BY ANIMAL_TYPE ASC

-- 동명 동물 수 찾기
SELECT NAME, COUNT(*)
FROM ANIMAL_INS
WHERE NAME IS NOT NULL
GROUP BY NAME
HAVING COUNT(*) > 1
ORDER BY NAME

-- 입양 시각 구하기
SELECT TO_CHAR(DATETIME, 'HH24'), COUNT(*)
FROM ANIMAL_OUTS
WHERE TO_NUMBER(TO_CHAR(DATETIME, 'HH24')) >= 9 AND TO_NUMBER(TO_CHAR(DATETIME, 'HH24')) < 20
GROUP BY TO_CHAR(DATETIME, 'HH24')
ORDER BY TO_CHAR(DATETIME, 'HH24')

